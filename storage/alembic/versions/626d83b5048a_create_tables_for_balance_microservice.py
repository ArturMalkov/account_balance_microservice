"""create tables for balance microservice

Revision ID: 626d83b5048a
Revises: 
Create Date: 2022-11-06 16:13:07.115096

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '626d83b5048a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.DECIMAL(), nullable=True),
    sa.Column('bank_account_number', sa.String(length=50), nullable=False),
    sa.Column('bank', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('price', sa.DECIMAL(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.CheckConstraint('price >= 0'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('phone_number', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('username')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    )
    # adjusted since autogenerate doesn't correctly handle postgresql enums
    order_status = postgresql.ENUM('NOT_SUBMITTED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='order_status',
                                   create_type=False)
    order_status.create(op.get_bind(), checkfirst=False)
    op.add_column('orders', sa.Column('status', order_status, nullable=False))

    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.create_table('user_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.DECIMAL(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # adjusted since autogenerate doesn't correctly handle postgresql enums
    account_type = postgresql.ENUM('REGULAR', 'RESERVE', name='account_type', create_type=False)
    account_type.create(op.get_bind(), checkfirst=False)
    op.add_column('user_accounts', sa.Column('type', account_type, nullable=False))

    op.create_index(op.f('ix_user_accounts_user_id'), 'user_accounts', ['user_id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('quantity > 0'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_id', 'order_id')
    )
    op.create_index(op.f('ix_order_items_order_id'), 'order_items', ['order_id'], unique=False)
    op.create_index(op.f('ix_order_items_service_id'), 'order_items', ['service_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('from_user_id', sa.Integer(), nullable=True),
    sa.Column('to_user_id', sa.Integer(), nullable=True),
    sa.Column('to_company_account', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['to_company_account'], ['company_accounts.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # adjusted since autogenerate doesn't correctly handle postgresql enums
    transaction_type = postgresql.ENUM('DEPOSIT', 'FUNDS_TRANSFER', 'RESERVE', 'RESERVE_REFUND', 'PAYMENT_TO_COMPANY', name='transaction_type', create_type=False)
    transaction_type.create(op.get_bind(), checkfirst=False)
    op.add_column('transactions', sa.Column('type', transaction_type, nullable=False))

    op.create_index(op.f('ix_transactions_order_id'), 'transactions', ['order_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_order_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_order_items_service_id'), table_name='order_items')
    op.drop_index(op.f('ix_order_items_order_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_user_accounts_user_id'), table_name='user_accounts')
    op.drop_table('user_accounts')
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('services')
    op.drop_table('company_accounts')
    # ### end Alembic commands ###
